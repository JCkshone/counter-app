name: iOS_workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    name: Lulo Build and Test
    runs-on: macos-latest

    steps:
      - id: 'reviews'
        uses: 'jrylan/github-action-reviews-counter@main'
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Validate Secrets
        if: 'steps.reviews.outputs.approved >= 1 && steps.reviews.outputs.changes_requested == 0'
        run: |
          secret=${{ secrets.GITHUB_TOKEN }}
          var_secret=${{ vars.SECRET_TOKEN }}
          var_validation='${{ toJson(github.event.pull_request.requested_reviewers) }}' | jq '. | length' -ne "0"
          echo $secret
          echo $var_secret
          echo '${{toJson(steps.reviews.outputs)}}'
      #- name: Checkout
      #  uses: actions/checkout@v3
      #- name: Set Default Scheme
      #  run: |
      #    scheme_list=$(xcodebuild -list -json | tr -d "\n")
      #    default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
      #    echo $default | cat >default
      #    echo Using default scheme: $default
      #- name: Build
      #  env:
      #    scheme: ${{ 'default' }}
      #    platform: ${{ 'iOS Simulator' }}
      #  run: |
      #    # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
      #    device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
      #    if [ $scheme = default ]; then scheme=$(cat default); fi
      #    if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #    file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #    xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
      #- name: Test
      #  env:
      #    scheme: ${{ 'default' }}
      #    platform: ${{ 'iOS Simulator' }}
      #  run: |
      #    # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
      #    device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
      #    if [ $scheme = default ]; then scheme=$(cat default); fi
      #    if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #    file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #    xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
          